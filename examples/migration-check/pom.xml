<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>cd.connect</groupId>
  <artifactId>migration-check</artifactId>
  <name>migration-check</name>
  <version>1.1-SNAPSHOT</version>
  <description>
    This is an example where we do an initial request for features using REST to ensure that the FeatureHub
    server is up and working, and then swap the configuration to SSE for the rest of the journey.

    This is the kind of approach you might take if you are slowly migrating away from a self-made Feature
    flagging system.

    The application simply starts a simple Java hosted HTTP server, it is not intended to be a full blown
    example, just showing how you can mingle the two Edge connection services together.
  </description>

  <properties>
    <log4j.version>2.20.0</log4j.version>
    <lmax.disruptor>3.4.4</lmax.disruptor>
    <slfj4.version>2.0.5</slfj4.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.featurehub.sdk</groupId>
      <artifactId>java-client-sse</artifactId>
      <version>[1.4, 2)</version>
    </dependency>

    <dependency>
      <groupId>io.featurehub.sdk</groupId>
      <artifactId>java-client-android</artifactId>
      <version>[2, 3)</version>
    </dependency>

    <dependency>
      <groupId>io.featurehub.sdk.composites</groupId>
      <artifactId>sdk-composite-logging</artifactId>
      <version>[1.1, 2)</version>
    </dependency>

  </dependencies>

  <licenses>
    <license>
      <name>MIT</name>
      <url>https://opensource.org/licenses/MIT</url>
      <comments>This code resides in the customer's codebase and therefore has an MIT license.</comments>
    </license>
  </licenses>

  <build>
    <plugins>
      <plugin>
        <groupId>io.repaint.maven</groupId>
        <artifactId>tiles-maven-plugin</artifactId>
        <version>2.23</version>
        <extensions>true</extensions>
        <configuration>
          <filtering>false</filtering>
          <tiles>
            <tile>io.featurehub.sdk.tiles:tile-java8:[1.1,2)</tile>
          </tiles>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>5.2.1</version>
        <dependencies>
          <dependency>
            <groupId>cd.connect.openapi</groupId>
            <artifactId>connect-openapi-jersey3</artifactId>
            <version>7.9</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>featurehub-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <output>${project.basedir}/target/generated-sources/api</output>
              <apiPackage>todo.api</apiPackage>
              <modelPackage>todo.model</modelPackage>
              <inputSpec>${project.basedir}/todo-api.yaml</inputSpec>
              <generatorName>jersey3-api</generatorName>
              <library>jersey3-api</library>

              <additionalProperties>
                <additionalProperty>server</additionalProperty>
              </additionalProperties>

              <configOptions>
                <configOption>
                  <name>useBeanValidation</name>
                  <value>true</value>
                </configOption>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-generated-source</id>
            <phase>initialize</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/api/src/gen</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
